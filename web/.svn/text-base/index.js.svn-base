/* 
 * Generated by Natileo - Velociraptor
 * on Thu Nov 04 21:12:37 CET 2010
 * hemca.com
 * by Strzelewicz Alexandre
 */ 

var formInprogressProjects;
var storeInprogressProjects;

Ext.onReady(function(){

	/*
     * Mapping
     * 
     */
	
	var InprogressProjects = Ext.data.Record.create([
		{name : 'projName', type : 'String'},
		{name : 'progress', type : 'String'},
		{name : 'field1', type : 'String'},
		{name : 'field2', type : 'String'},
		{name : 'beginDate', type:'date'},
		{name : 'endDate', type:'date'},
		{name : 'previsionDate', type:'date'},
		{name : 'projCmt', type : 'String'},
		{name : 'priority', type : 'String'},
		{name : 'previsionTime', type : 'String'},
		{name : 'spentTime', type : 'String'},
		{name : 'projLogo', type : 'String'},
		{name : 'projLink', type : 'String'},
		{name : 'id', type : 'int'}
	]);
	
	
	var colsInprogressProjects = [
            		{header : 'projName', dataIndex : 'projName', hidden : false},
                {header : 'priority', dataIndex : 'priority', hidden : false},
		{header : 'progress', dataIndex : 'progress', hidden : false},
		{header : 'field1', dataIndex : 'field1', hidden : true},
		{header : 'field2', dataIndex : 'field2', hidden : true},
		{header : 'beginDate', dataIndex : 'beginDate', hidden : true},
		{header : 'endDate', dataIndex : 'endDate', hidden : true},
		{header : 'previsionDate', dataIndex : 'previsionDate', hidden : false},
		{header : 'projCmt', dataIndex : 'projCmt', hidden : true},
		{header : 'previsionTime', dataIndex : 'previsionTime', hidden : false},
		{header : 'spentTime', dataIndex : 'spentTime', hidden : true},
		{header : 'projLogo', dataIndex : 'projLogo', hidden : true},
		{header : 'projLink', dataIndex : 'projLink', hidden : true},
		{header : 'id', dataIndex : 'id', hidden : true}
	];
	
	/* 
	 * Proxy
	 * 
	 */
	var proxyInprogressProjects = new Ext.data.HttpProxy({
		api: {
			read   : 'inprogressProjects/read.action',
			create : 'inprogressProjects/create.action',
			update : 'inprogressProjects/update.action',
			destroy: 'inprogressProjects/delete.action'
		}
	});
	
	var readerInprogressProjects = new Ext.data.JsonReader({
		totalProperty	: 'total', 
		successProperty : 'success', 
		idProperty	: 'id', 
		root		: 'data'
		}, 
		InprogressProjects
	);

	var writerInprogressProjects = new Ext.data.JsonWriter({
		encode		: true,
		writeAllFields	: true
    });
	
	storeInprogressProjects = new Ext.data.Store({
		id	: 'user',
		proxy	: proxyInprogressProjects,
		autoSave: true,
		reader	: readerInprogressProjects,
		writer	: writerInprogressProjects
	});
    
    storeInprogressProjects.load({params:{"start":0, "limit":50}});
	//storeInprogressProjects.load();
	
	/*
	 * Plugins
	 */
	 
	 var filterInprogressProjects = new Ext.ux.grid.GridFilters({
		local	: false,
		filters	:[
			{dataIndex : 'projName', type : 'string'},
			{dataIndex : 'progress', type : 'string'},
			{dataIndex : 'field1', type : 'string'},
			{dataIndex : 'field2', type : 'string'},
			{dataIndex : 'beginDate', type : 'string'},
			{dataIndex : 'endDate', type : 'string'},
			{dataIndex : 'previsionDate', type : 'string'},
			{dataIndex : 'projCmt', type : 'string'},
			{dataIndex : 'priority', type : 'string'},
			{dataIndex : 'previsionTime', type : 'string'},
			{dataIndex : 'spentTime', type : 'string'},
			{dataIndex : 'projLogo', type : 'string'},
			{dataIndex : 'projLink', type : 'string'},
			{dataIndex : 'id', type : 'int'}
		]
	});
	
	/*
	 * Elements
	 */
	formInprogressProjects = new Ext.FormPanel({
		title      : 'Form',
		region     : 'center',
		split      : 'true',
		bodyStyle  : 'padding:20px;',
		defaults   : {width : window.innerWidth - 550, xtype : 'textfield'},
		items      : formProject,
		buttonAlign : 'center',
                tbar : [
                    {
			text     : 'To Suspend >',
			formBind : true,
			handler  : function(){
                            var e = new SuspendProjects;
                            e.data = formInprogressProjects.getForm().getValues();
                            // remove id else a update will happen
                            e.data.id = null;
                            storeSuspendProjects.insert(0, e);
                            var r = gridListInprogressProjects.getSelectionModel().getSelected();
			    storeInprogressProjects.remove(r);
                            formInprogressProjects.getForm().reset();
			}
		}, '-',
                {
			text     : 'To In Wait >',
			formBind : true,
			handler  : function(){
                            var e = new SuspendProjects;
                            e.data = formInprogressProjects.getForm().getValues();
                            // remove id else a update will happen
                            e.data.id = null;
                            storeArchiveProjects.insert(0, e);
                            var r = gridListInprogressProjects.getSelectionModel().getSelected();
			    storeInprogressProjects.remove(r);
                            formInprogressProjects.getForm().reset();
			}
		}
                ],
		buttons     : 
		[{
			text     : 'Create', 
			formBind : true,
			handler  : function(){
				var e = new InprogressProjects;
				e.data = formInprogressProjects.getForm().getValues();
				storeInprogressProjects.insert(storeInprogressProjects.getCount(), e);
				formInprogressProjects.getForm().reset();
			}
		},{
			text     : 'Update',
			formBind : true, 
			handler  : function(){
				formInprogressProjects.getForm().updateRecord(formInprogressProjects.record);
			}
		},{  
			text    : 'Delete',
			handler : function(){
				formInprogressProjects.getForm().reset();
				var r = gridListInprogressProjects.getSelectionModel().getSelected();
				storeInprogressProjects.remove(r);
				gridListInprogressProjects.getSelectionModel().selectRow(r.lastIndex);
			}
		},{
			text     : 'Reset',
			formBind : true,
			handler  : function(){
				formInprogressProjects.getForm().reset();
			}
		}

        ]
	});

	var gridListInprogressProjects = new Ext.grid.GridPanel({
    store     : storeInprogressProjects,
    columns   : colsProjects,
    region    : 'west',
    width     : 400,
    split     : true,
    title     : '<center>In progress</center>',
    frame     : true,
    plugins   : [filterInprogressProjects],
    tbar :[
    {
        iconCls : 'silk-delete',
        text : 'Delete',
        handler : function(){
            Ext.MessageBox.confirm('Status', 'Delete ? ', function(btn){
                if (btn == 'yes') {
                    formInprogressProjects.getForm().reset();
                    var r = gridListInprogressProjects.getSelectionModel().getSelected();
                    storeInprogressProjects.remove(r);
                    gridListInprogressProjects.getSelectionModel().selectRow(r.lastIndex);
                }
            });

        }
    }
    ],
    listeners : {
        rowclick:function(grid, row, event){
            formInprogressProjects.record = grid.getStore().getAt(row);
            formInprogressProjects.getForm().loadRecord(formInprogressProjects.record);
        }
    }
});

        var inProgressPanel = new Ext.Panel({
            title : 'In progress',
            xtype : 'viewport',
            layout : 'border',
            items : [gridListInprogressProjects, formInprogressProjects]
        });

        var projectPanel = new Ext.TabPanel({
            activeTab : 0,
            region : 'center',
            items : [inProgressPanel, viewportArchive, viewportSuspend]

        });

        var presHead = new Ext.Panel({
		region : 'north',
		height : 60,
		border : false,
		html : '<img src="img/header.png" alt="hemca" />'
        });

	var viewport = new Ext.Viewport({
		layout    : 'border',
		renderTo  : Ext.getBody(),
		items     : [projectPanel, presHead]
	});
});