/* 
 * Generated by Natileo - Velociraptor
 * on Fri Nov 05 01:18:18 CET 2010
 * hemca.com
 * by Strzelewicz Alexandre
 */ 

var viewportSuspend;
var storeSuspendProjects;
var SuspendProjects ;
var formSuspendProjects;
var gridListSuspendProjects;

Ext.onReady(function(){

	/*
     * Mapping
     * 
     */
	
	SuspendProjects = Ext.data.Record.create([
		{name : 'projName', type : 'String'},
		{name : 'progress', type : 'String'},
		{name : 'field1', type : 'String'},
		{name : 'field2', type : 'String'},
		{name : 'beginDate', type : 'String'},
		{name : 'endDate', type : 'String'},
		{name : 'previsionDate', type : 'String'},
		{name : 'projCmt', type : 'String'},
		{name : 'priority', type : 'String'},
		{name : 'previsionTime', type : 'String'},
		{name : 'spentTime', type : 'String'},
		{name : 'projLogo', type : 'String'},
		{name : 'projLink', type : 'String'},
		{name : 'id', type : 'int'}
	]);
	
	/* 
	 * Proxy
	 * 
	 */
	var proxySuspendProjects = new Ext.data.HttpProxy({
		api: {
			read   : 'suspendProjects/read.action',
			create : 'suspendProjects/create.action',
			update : 'suspendProjects/update.action',
			destroy: 'suspendProjects/delete.action'
		}
	});
	
	var readerSuspendProjects = new Ext.data.JsonReader({
		totalProperty	: 'total', 
		successProperty : 'success', 
		idProperty	: 'id', 
		root		: 'data'
		}, 
		SuspendProjects
	);

	var writerSuspendProjects = new Ext.data.JsonWriter({
		encode		: true,
		writeAllFields	: true
    });
	
	storeSuspendProjects = new Ext.data.Store({
		id	: 'user',
		proxy	: proxySuspendProjects,
		autoSave: true,
		reader	: readerSuspendProjects,
		writer	: writerSuspendProjects
	});
    
    storeSuspendProjects.load({params:{"start":0, "limit":50}});
	
	/*
	 * Plugins
	 */
	 
	 var filterSuspendProjects = new Ext.ux.grid.GridFilters({
		local	: false,
		filters	:[
			{dataIndex : 'projName', type : 'string'},
			{dataIndex : 'progress', type : 'string'},
			{dataIndex : 'field1', type : 'string'},
			{dataIndex : 'field2', type : 'string'},
			{dataIndex : 'beginDate', type : 'string'},
			{dataIndex : 'endDate', type : 'string'},
			{dataIndex : 'previsionDate', type : 'string'},
			{dataIndex : 'projCmt', type : 'string'},
			{dataIndex : 'priority', type : 'string'},
			{dataIndex : 'previsionTime', type : 'string'},
			{dataIndex : 'spentTime', type : 'string'},
			{dataIndex : 'projLogo', type : 'string'},
			{dataIndex : 'projLink', type : 'string'},
			{dataIndex : 'id', type : 'int'}
		]
	});
	
	/*
	 * Elements
	 */
	 
	formSuspendProjects = new Ext.FormPanel({
		title      : 'SuspendProjects form',
		region     : 'center',
		split      : 'true',
		bodyStyle  : 'padding:20px;',
defaults   : {width : window.innerWidth - 550, xtype : 'textfield'},
		items      : formProject,
		buttonAlign : 'center',
                 tbar : [
                    {
			text     : '< To In Progress',
			formBind : true,
			handler  : function(){
                            var e = new SuspendProjects;
                            e.data = formSuspendProjects.getForm().getValues();
                            e = setTimeSpent(e);
                            storeInprogressProjects.insert(0, e);
                            var r = gridListSuspendProjects.getSelectionModel().getSelected();
			    storeSuspendProjects.remove(r);
                            formSuspendProjects.getForm().reset();
			}
		}, '-',
                {
			text     : '< To Proposals /Suspended',
			formBind : true,
			handler  : function(){
                            var e = new SuspendProjects;
                            e.data = formSuspendProjects.getForm().getValues();
                            e.data.id = null;
                            storeArchiveProjects.insert(0, e);
                            var r = gridListSuspendProjects.getSelectionModel().getSelected();
			    storeSuspendProjects.remove(r);
                            formSuspendProjects.getForm().reset();
			}
		}
                ],
		buttons     : 
		[/*{
			text     : 'Create', 
			formBind : true,
			handler  : function(){
				var e = new SuspendProjects;
				e.data = formSuspendProjects.getForm().getValues();
				storeSuspendProjects.insert(storeSuspendProjects.getCount(), e);
				formSuspendProjects.getForm().reset();
			}
		},*/{
			text     : 'Update',
			formBind : true, 
			handler  : function(){
				formSuspendProjects.getForm().updateRecord(formSuspendProjects.record);
			}
		},{  
			text    : 'Delete',
			handler : function(){
				formSuspendProjects.getForm().reset();
				var r = gridListSuspendProjects.getSelectionModel().getSelected();
				storeSuspendProjects.remove(r);
				gridListSuspendProjects.getSelectionModel().selectRow(r.lastIndex);
			}
		}/*,{
			text     : 'Reset',
			formBind : true,
			handler  : function(){
				formSuspendProjects.getForm().reset();
			}
		}*/]
	});

	gridListSuspendProjects = new Ext.grid.GridPanel({
    store     : storeSuspendProjects,
    columns   : colsProjects,
    region    : 'west',
    width     : 400,
    split     : true,
    title     : '<center>Suspend</center>',
    frame     : true,
    plugins   : [filterSuspendProjects],
    tbar :[
    {
        iconCls : 'silk-delete',
        text : 'Delete',
        handler : function(){
            Ext.MessageBox.confirm('Status', 'Delete ? ', function(btn){
                if (btn == 'yes') {
                     formSuspendProjects.getForm().reset();
            var r = gridListSuspendProjects.getSelectionModel().getSelected();
            storeSuspendProjects.remove(r);
            gridListSuspendProjects.getSelectionModel().selectRow(r.lastIndex);
                }
            });

        }
    }
],
listeners : { 
    rowclick:function(grid, row, event){
        formSuspendProjects.record = grid.getStore().getAt(row);
        formSuspendProjects.getForm().loadRecord(formSuspendProjects.record);
    }
}
});

        viewportSuspend = new Ext.Panel({
            title : 'Done',
            xtype : 'viewport',
            layout : 'border',
            		items     : [gridListSuspendProjects, formSuspendProjects]
        });
        
//viewportSuspend = new Ext.Viewport({
//		layout    : 'border',
//                title : 'Suspend',
//		items     : [gridListSuspendProjects, formSuspendProjects]
//	});
});